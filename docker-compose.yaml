# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker compose reference guide at
# https://docs.docker.com/compose/compose-file/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose

version: "3.9"

services:
  postgres:
    container_name: postgres
    image: postgres:alpine3.18
    restart: always
    volumes:
      - postgres-db:/var/lib/postgresql/data
    env_file:
      - .env
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  client-backend:
    image: client:0.0.1
    build:
      context: ./backend/details
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      DATABASE_NO_SSL: "true"
      DATABASE_URL: ${SPRING_DATASOURCE_URL}
    networks:
      - app-network

  frontend:
    build: ./frontend
    ports:
      - "0.0.0.0:3000:3000"
    env_file:
      - frontend/.env
    volumes:
      - ./frontend/src:/frontend/src
    #
    restart: unless-stopped

volumes:
  postgres-db:
    driver: local

networks:
  app-network:
    driver: bridge